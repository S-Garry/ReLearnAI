openapi: 3.0.0
info:
  title: Mistake Book API
  version: 1.0.0
  description: API for managing users, folders, and questions in a mistake-book app
paths:
  /auth/register:
    post:
      summary: Register a new user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                email:
                  type: string
                password:
                  type: string
              required:
                - name
                - email
                - password
      responses:
        '201':
          description: User registered successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  user:
                    type: object
                    properties:
                      id:
                        type: string
                        format: uuid
                      name:
                        type: string
                      email:
                        type: string
                      created_at:
                        type: string
                        format: date-time
                  token:
                    type: string
                    description: JWT token for authentication
                required:
                  - message
                  - user
                  - token
        '400':
          description: Bad request (validation error or email already exists)
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                required:
                  - error
  /auth/login:
    post:
      summary: User login
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
              required:
                - email
                - password
      responses:
        '200':
          description: Login successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  user:
                    type: object
                    properties:
                      id:
                        type: string
                        format: uuid
                      name:
                        type: string
                      email:
                        type: string
                      created_at:
                        type: string
                        format: date-time
                  token:
                    type: string
                    description: JWT token used for authentication
                required:
                  - message
                  - user
                  - token
        '401':
          description: Invalid credentials
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                required:
                  - error
  /question-set:
    post:
      summary: Create a folder with tag and a batch of questions
      security:
        - bearerAuth: []
      parameters: 
        - name: token
          in: header
          description: 'Authorization: Bearer <token>' 
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                folder_name:
                  type: string
                tag_name:
                  type: string
                questions:
                  type: array
                  items:
                    type: object
                    properties:
                      description:
                        type: string
                      options:
                        type: object
                        properties:
                          A:
                            type: string
                          B:
                            type: string
                          C:
                            type: string
                          D:
                            type: string
                        required: [A, B, C, D]
                      answer:
                        type: string
                        enum: [A, B, C, D]
                      user_answer:
                        type: string
                        enum: [A, B, C, D]
                      note:
                        type: string
                    required: [description, options, answer, user_answr]
              required: [folder_name, tag_name, questions]
      responses:
        '201':
          description: Folder and questions created successfully
        '400':
          description: Invalid request payload
  /auth/me:
    get:
      summary: Get current user profile
      security:
        - bearerAuth: []
      parameters: 
        - name: Authorization
          in: header
          description: 'Bearer <token>'
          required: true
          schema:
            type: string
      responses:
        '200':
          description: User profile retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    format: uuid
                  name:
                    type: string
                  email:
                    type: string
                  created_at:
                    type: string
                    format: date-time
        '401':
          description: Authentication failed